연속할당의 방법을 취하고 잇으나 모든 부분을 메모리에 탑재하지 않고 운영프로그램을 작성하는 프로그래머에 의해

어셈블러 c커뮤ㅏ일러처럼
각단계가 순차적으로 처리된다고햇을때
굳이 두단계에 대한 코드를 메모리에 올릴 필요없이 첫번째가 필요하면 첫번째 두번째가 필요하면 두번째
제한되지는 메모리를 사ㅏ용

멀티 테스킹
다중프로그래밍
한번에 하나가아니라
한번에 여러개가 수행
여러개 프로세스들을 연속된 공간에 할당을 해주되, 
a프로세스가 
서로 다른 공간에 할당될수 잇도록
베이스 레지스터
시작점을 지정을 해주고 임의의 위치로도 할당을 할수잇도록

cpu는 더해서 접근하면
내cpu가 접근하는 물리적인 주소를 얻어낼수 잇고
cpu 346 더해서 접근

동적 적재
초창기 운영체제가 메모리 관리를 충분히 지원하지 못할때
제약을 극복하ㅣㄱ 위해서
줄이지 않고 해볼수 잇는 방법이 뭐가 있을까

내프로그램을 수행할때 필요한 모든 모듈을 메모리에 탑재하는 것 대신에 
사용하지 않는 모듈은 메모리에 탑재하지 않는다.

워드프로세서를 쓸때 모든 기능을 사용하지 않는다.
입력 편집 처럼

인쇄하는 기능도 매번 인쇄를 하지 않기 때문에

굳이 이런걸 메모리에 탑재를 왜하냐

각각의 루틴들은 호출 되기 전까지 메모리에 적재되지 않고 디스크에 대기

운영체제 차원이 아니라 응용프로그래머가 고안해서 적용

오늘날은 이런거는 고민안해도됨

동적 적재는 메모리 로딩하는 시간이 동적으로 이뤄짐

동적 연결은 

윈도우 같은 거 보면 비슷비슷한 형태를 취하고 있음.

c프로그래밍 작성할때 printf 필요한데

내가 만든게 아니야

다른 애도 팔요할때

컴파일하고 링크하고 실행파일을 만들때 담김

이게 잇으면 어디서든 

덩치가 큰 라이브러리를 모든 윈도우즈 프로그램이 갇게 하자니까

실행파일의 크기가 커짐

커지니까 실행됬을때 찿지하는 메모리 크기도 많아짐

동시 수행할 수 있는 프로그램의 양이 적어짐.

윈도우 껍데기는 버튼 매번 사용 

자주 사용되어지는 라이브러리에 대해서 

실행하는 순간에 라이브러리가 연결 될 수 있도록

공유 라이브러리를 만들어 놓고 다른 프로세들의 참조하여 실행할 수 있도록

운영체제의 도움을 받아서 공유 라이브러리의 영역도 참조할수 잇게함

실행파일에 포함하지 않더라도 실행이 가능하게도미.

실행 파일의 크기도 줄임.

필요로 하는 메모리도 적게
다중 프로그래밍도 

오늘날 우니도우 유닉스 리눅스

동적 연결되는 라이브러리들이 잇음

단점이 잇는데, 동적 연결 될 라이브러리가 없으면 실행이 안됨.

ㅇㅖ를 들어 1.0 버전의 라이브러리 이게 2.0이 출시됨

1.0 라이브러리를 지워버리게 되면

엣날 프로그램은 제대로 동작이 가능하지 않게 됨.

업그레이드를 하다보면 피치 못해 호출 인터페이스가 바귀게됨.

라이브러리 버전 관리가 안됨.

현재 시스템에 많은 동적 라이브러리들이 여러 버전이 있어야됨.

스와핑

실행중인 프로세스가 지금 당장 실행되지 않는 경우가 이슴

파일 탐색기에서 파워 포인트 슬라이드를 실행 할때는 파일탐색기 건드리지도 않음

메모리가 충분하면 문제가 없음.

더이상 프로그램을 실행할 수 없을때는 (메모리 부족으로)

지금 실행 중이나 cpu 가 안쓰는 프로세스를 메모리에서 쫓아내버리자가 바로 스와핑

실행중인 프로세스를 또다른 저장장치인 보조기억장치 특정 영역

cpu가 보조 기억 장치에 잇는 거를 실행할수는 없음 너무 느림

지금 당장 실행할 필요가 없다면 하드디스크 어딘가 스왑 영역에 저장하면

됨


그러다가 다시 필요하면
다시 스왑인하면 메모리 부족 문제 극복할 수 있음.

충분한 메모리를 탑재한 시스템은 없다라고 할정도엿음

많은 연구들이 이어져 왔었다.

최종 결론은 오늘날의 비연속 메모리 할당.

동적 적재 

 이번 주차에는 우리가 사용하는 메모리를 어떻게 운영체제가 사용하는지 알아보기전에

워밍업하는 주차

단편화 문제가 무엇인지

연속화 문제가 무엇인지 정리

나머지 시간은 시험지 답안 확인